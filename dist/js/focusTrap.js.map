{
  "version": 3,
  "sources": ["../../src/js/focusTrap.js"],
  "sourcesContent": ["`use strict`;\n\nclass Draad_Focus_Trap {\n\n\t/**\n\t * Constructor\n\t * \n\t * @param {HTMLElement} node HTML element to trap focus in\n\t */\n\tconstructor( node ) {\n\n\t\tthis.rootEl = node;\n\n\t}\n\n\trootEl = null;\n\n\t_active = false;\n\n\tfirstFocusableElement = null;\n\n\tlastFocusableElement = null;\n\n\tget active() {\n\t\treturn this._active;\n\t}\n\n\tset active( value ) {\n\n\t\tif ( typeof value !== 'boolean' ) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._active = value;\n\n\t\tif ( this._active ) {\n\t\t\tthis.activate();\n\t\t} else {\n\t\t\tthis.deactivate();\n\t\t}\n\n\t}\n\t\n\t/**\n\t * Activate focus trap\n\t */\n\tactivate() {\n\n\t\tif ( ! this._active ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// get all focusable children\n\t\tconst focusableElements = Array.from( this.rootEl.querySelectorAll( 'a[href], button, textarea, input, select, summary, [tabindex]' ) );\n\t\t// filter out elements with tabindex=\"-1\"\n\t\tfocusableElements.filter( ( element ) => element.getAttribute( 'tabindex' ) !== '-1' );\n\n\t\tif ( focusableElements.length === 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// filter out elements that are not visible\n\t\tconst visibleFocusableElements = focusableElements.filter( ( element ) => element.offsetParent !== null );\n\n\t\tthis.firstFocusableElement = visibleFocusableElements[0];\n\n\t\tthis.lastFocusableElement = visibleFocusableElements[visibleFocusableElements.length - 1];\n\n\t\tthis.rootEl.addEventListener( 'keydown', ( event ) => {\n\n\t\t\tif ( event.key !== 'Tab' ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( ! event.shiftKey && document.activeElement === this.lastFocusableElement ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.firstFocusableElement.focus();\n\t\t\t} else if ( event.shiftKey && document.activeElement === this.firstFocusableElement ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tthis.lastFocusableElement.focus();\n\t\t\t}\n\n\t\t});\n\n\t}\n\n\t/**\n\t * Deactivate focus trap\n\t */\n\tdeactivate() {\n\n\t\tthis.rootEl.removeEventListener( 'keydown', () => {} );\n\n\t\tthis.firstFocusableElement = null;\n\n\t\tthis.lastFocusableElement = null;\n\n\t}\n\n}\n\nexport default Draad_Focus_Trap;"],
  "mappings": "MAEA,IAAMA,EAAN,KAAuB,CAOtB,YAAaC,EAAO,CAEnB,KAAK,OAASA,CAEf,CAEA,OAAS,KAET,QAAU,GAEV,sBAAwB,KAExB,qBAAuB,KAEvB,IAAI,QAAS,CACZ,OAAO,KAAK,OACb,CAEA,IAAI,OAAQC,EAAQ,CAEd,OAAOA,GAAU,YAItB,KAAK,QAAUA,EAEV,KAAK,QACT,KAAK,SAAS,EAEd,KAAK,WAAW,EAGlB,CAKA,UAAW,CAEV,GAAK,CAAE,KAAK,QACX,OAID,IAAMC,EAAoB,MAAM,KAAM,KAAK,OAAO,iBAAkB,+DAAgE,CAAE,EAItI,GAFAA,EAAkB,OAAUC,GAAaA,EAAQ,aAAc,UAAW,IAAM,IAAK,EAEhFD,EAAkB,SAAW,EACjC,OAID,IAAME,EAA2BF,EAAkB,OAAUC,GAAaA,EAAQ,eAAiB,IAAK,EAExG,KAAK,sBAAwBC,EAAyB,CAAC,EAEvD,KAAK,qBAAuBA,EAAyBA,EAAyB,OAAS,CAAC,EAExF,KAAK,OAAO,iBAAkB,UAAaC,GAAW,CAEhDA,EAAM,MAAQ,QAId,CAAEA,EAAM,UAAY,SAAS,gBAAkB,KAAK,sBACxDA,EAAM,eAAe,EACrB,KAAK,sBAAsB,MAAM,GACtBA,EAAM,UAAY,SAAS,gBAAkB,KAAK,wBAC7DA,EAAM,eAAe,EACrB,KAAK,qBAAqB,MAAM,GAGlC,CAAC,CAEF,CAKA,YAAa,CAEZ,KAAK,OAAO,oBAAqB,UAAW,IAAM,CAAC,CAAE,EAErD,KAAK,sBAAwB,KAE7B,KAAK,qBAAuB,IAE7B,CAED,EAEOC,EAAQP",
  "names": ["Draad_Focus_Trap", "node", "value", "focusableElements", "element", "visibleFocusableElements", "event", "focusTrap_default"]
}
